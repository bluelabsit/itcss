// Xeader Studios
//
// NOTICE OF LICENCE
//
// This source file is subject to the EULA
// that is bundled with this package in the file LICENSE.txt
// It is also available through th world-wide-web at this URL:
// https://xeader.com/LICENCE-CE.txt
//
// @category xeader.itcss
// @package xeader.itcss
//
// @author Antonio Gatta <a.gatta@xeader.com>
// @url https://xeader.com
// @copyright Copyright (c) 2019 Xeader Studios
// @license All right reserved

$columns-count: 1;
$gutter: 0;
$full-start: true !default;
$create-grid-columns-classes: true !default;

@each $size in $breakpoint-classes {
  @if type-of($grid-column-count) == "number" {
    $columns-count: $grid-column-count;
  } @else if (contains(map_keys($grid-column-count), $size)) {
    $columns-count: map_get($grid-column-count, $size);
  }

  @include breakpoint($size up) {
    :root {
      --grid-columns: #{$columns-count};
      --column-columns: #{$columns-count};
    }
    @if ($create-grid-columns-classes == true) {
      .#{$size}-full {
        @if ($full-start == true) {
          grid-column-start: 1;
        }
        grid-column-end: -1;
      }
      @for $i from 1 through $columns-count {
        .#{$size}-x-#{$i} {
          grid-column-start: $i;
        }

        .#{$size}-#{$i} {
          @include grid-column($i);
        }

        .#{$size}-#{$grid-name}-#{$i} {
          @if map_has_key($grid-column-gutter, $size) {
          $gutter: map_get($grid-column-gutter, $size);
        }
        --grid-gutter: #{$gutter};
        @include subgrid($i);

        &.#{$grid-name} {
          --grid-columns: #{$i};
        }
      }
    }
    }
  }
}

.#{$grid-container-name} {
  @include grid-container;
}

.#{$grid-name} {
  @include grid;
}

.#{$grid-name}-wrapper {
  @include grid-wrapper;

  &--trim-left {
    @include grid-wrapper(true, false);
  }

  &--trim-right {
    @include grid-wrapper(false, true);
  }

  &--trim {
    @include grid-wrapper(false, false);
  }
}
