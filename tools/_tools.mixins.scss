// Xeader Studios
//
// NOTICE OF LICENCE
//
// This source file is subject to the EULA
// that is bundled with this package in the file LICENSE.txt
// It is also available through th world-wide-web at this URL:
// https://xeader.com/LICENCE-CE.txt
//
// @category xeader.itcss
// @package xeader.itcss
//
// @author Antonio Gatta <a.gatta@xeader.com>
// @url https://xeader.com
// @copyright Copyright (c) 2019 Xeader Studios
// @license All right reserved

/**
 * MIXINS
 */

// Simple truncation mixin to cut off text using an ellipsis after a certain
// width.
//
// .simple-usage {
//   @include truncate();
// }
//
// .detailed-usage {
//   @include truncate(<value>, important);
// }

@mixin truncate($limit: 100%, $important: false) {
  @if ($important == "important") {
    $important: unquote("!important");
  } @else {
    $important: null;
  }

  max-width: $limit $important;
  white-space: nowrap $important;
  overflow: hidden $important;
  text-overflow: ellipsis $important;
}

/**
 * Full Width
 */
$max-full-width: 1600px !default;

@mixin full-width-max {
  margin-left: auto;
  margin-right: auto;
  max-width: rem-calc($max-full-width);
}

/**
  First-Last no margin
 */
@mixin flnm() {
  > *:first-child {
    margin-top: auto;
  }
  > *:last-child {
    margin-bottom: auto;
  }
}


@mixin no-list{
  &, li{
    margin-top: unset;
    margin-bottom: unset;
    list-style-type: none;
    padding-left: 0;
  }
}

@mixin ellipsis-lines($lines: 2){
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

@mixin center-text-ellipsis(){
  span:first-child {
    // The left side CANNOT GROW, it can ONLY SHRINK (and add an ellipsis at the end).
    flex: 0 1 auto ;
    overflow: hidden ;
    text-overflow: ellipsis ;
    white-space: pre ;
  }

  span:last-child {
    // The right side can grow, but NOT SHRINK.
    flex: 1 0 auto ;
    overflow: hidden ;
    white-space: pre ;
  }
}

/**
 * Make an block scrollable
 */
@mixin scrollable($direction: vertical) {
  @if ($direction == vertical) {
    /* Make this scrollable when needed */
    overflow-x: hidden;
    /* We don't want vertical scrolling */
    overflow-y: auto;
  } @else {
    /* Make this scrollable when needed */
    overflow-x: auto;
    /* We don't want vertical scrolling */
    overflow-y: hidden;
  }
  /* For WebKit implementations, provide inertia scrolling */
  -webkit-overflow-scrolling: touch;

  /* Make an auto-hiding scroller for the 3 people using a IE */
  -ms-overflow-style: -ms-autohiding-scrollbar;
  scrollbar-width: none;
  /* Remove the default scrollbar for WebKit implementations */
  &::-webkit-scrollbar {
    display: none;
  }
}
